{"version":3,"sources":["component/sideBar.js","component/navBar.js","component/card/statusCard.js","component/util.js","component/chart/barChart.js","actions/dashboard_https.js","actions/axios.js","actions/actionTypes.js","component/DeviceDataTable/ColumnNames.js","component/DeviceDataTable/QueryOperators.js","component/chart/pieChart.js","component/DeviceDataTable/DeviceDataTableHeader.js","component/DeviceDataTable/DeviceDataStatus.js","component/DeviceDataTable/DeviceDataTableBody.js","component/DeviceDataTable/DeviceDataTableFooter.js","component/DeviceDataTable/DeviceDataTable.js","component/page/indexPage.js","component/chart/horizontalBarChart.js","common/DeviceCategory.js","component/DeviceProfile/DeviceProfileHeader.js","component/DeviceProfile/DeviceProfileButtons.js","component/DeviceProfile/DeviceProfileForm.js","component/DeviceProfile/DeviceProfile.js","component/card/deviceCard.js","component/chartData.js","component/page/deviceListPage.js","component/page/deviceDataPage.js","reducer/DeviceDataListReducer.js","reducer/reducer.js","reducer/dashboardStatusReducer.js","reducer/chartDeviceStatusReducer.js","reducer/deviceListPageReducer.js","reducer/deviceDataReducer.js","component/store.js","component/route.js","index.js","image/ITM.svg","image/ethereum.svg","image/home.svg","image/deviceList.svg","image/map.svg","image/photo.svg","image/verification.svg","image/notification.svg","image/remoteControl.svg","image/clearanceOrder.svg","image/cpu-tower.svg","image/solarpanel.svg","image/gps.svg","image/image.svg","image/menu.svg"],"names":["SideBar","className","to","alt","width","src","itm","homeSvg","deviceListSvg","onClick","window","location","href","mapSvg","photoSvg","React","Component","NavBar","id","role","data-toggle","aria-haspopup","aria-expanded","verificationSvg","notification","aria-labelledby","itmSvg","icon","remoteControlSvg","faDollarSign","ethereumSvg","clearanceOrderSvg","etherumStatus","translateContent","type","content","undefined","clearanceOrderStatus","StatusCard","this","props","title","btnClass","description","paddingZero","number","timeStamp2String","unixTime","datetime","Date","setTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","options","tooltips","displayColors","mode","scales","xAxes","stacked","gridLines","display","yAxes","ticks","beginAtZero","min","responsive","maintainAspectRatio","legend","position","BarChart","canvasRef","createRef","chartDeviceStatus","dataSource","chartData","labels","auditedData","pendingData","errorData","forEach","data","push","time","timeStamp2Hour","toTimestamp","statusCounts","CLIENT_AUDIT","REPLY_MSG_RECEIVE","REPLY_MSG_RECEIVE_TX_COUNT_WARN","LEDGER_INPUT_ERROR","CLIENT_AUDIT_ERROR","OBJECTION_SUCCESS","OBJECTION_ERROR","TX_COUNT_EXCEED","myChart","datasets","update","Chart","current","label","backgroundColor","ref","axios","create","baseURL","fetchAllDeviceListPage","dispatch","a","get","response","deviceList","fetchAllChartDeviceStatus","deviceId","duration","fromTimestamp","timestamp","Math","round","getTime","postData","post","deviceStatus","UpdateProfile","device","updatedDevice","category","updateTime","moment","valueOf","deviceName","name","hardwareType","status","payload","GetDeviceData","tableOptions","filterOptions","page","pageSize","toString","console","log","JSON","stringify","currentPage","enabled","intersect","PieChart","pieChartData","DeviceDataTableHeader","state","errorShow","onStartDateTimeChange","value","setState","onChange","onEndDateTimeChange","onSearchClick","showError","closeError","setErrorShow","show","onPageSizeSelect","eventKey","event","onPageSizeChange","Modal","onHide","size","centered","Header","closeButton","Title","Body","Footer","Alert","variant","onClose","dismissible","Heading","DropdownButton","map","renderPageSelectItem","Dropdown","Item","key","active","onSelect","closeOnSelect","renderPageSelect","renderAlert","pendingStatus","statusCode","statusClass","btnEthereumClass","errorStatus","auditedStatus","LEDGER_INPUT_OK","LEDGERINPUT_SUCCESS","VERIFY_OK","CLIENT_AUDITED","MERKLE_PROOF_ERROR","DeviceDataTableBody","scope","rendercmd","clearanceOrder","renderStatus","renderOnChainProof","renderOffChainProof","statusObj","deviceDataStatus","OverlayTrigger","placement","overlay","Tooltip","indexValue","faDownload","ethereum","cmd","faInfo","renderHeader","renderRows","DeviceDataTableFooter","onPagingClicked","e","parseInt","target","text","btn_className","aria-label","disabled","totalPage","pageNum","pages","displayPageCount","totalPages","bufferPages","floor","fromPage","toPage","pagingRenderer","renderPagingButtons","renderPageFooters","DeviceDataTable","startClearanceOrder","endClearanceOrder","deviceIds","onHeaderChange","onPagingClick","displayFooter","totalPageCount","displayFilter","deviceDataList","renderFooter","IndexPage","dataTableOption","pageCount","barChartOption","deviceCount","txCount","ethereumStatus","pieChart","categoryData","length","computeDeviceCategory","isPieChartDataAboveZero","fetchAllDeviceData","fetchDashboardStatus","renderStatusRow","renderChartCard","renderPieChart","totalCount","connect","dashboardStatus","deviceData","deviceDataTable","totalDataCount","horizontalBarChartOption","HorizontalBarChart","SOLAR_PANEL_METER","TRACKER","IMAGE_INPUT","OTHER","ICON_SOLAR_PANEL_METER","solarPanelIcon","ICON_TRACKER","trackerIcon","ICON_IMAGE_INPUT","imageIcon","ICON_OTHER","otherIcon","DeviceProfileHeader","categoryConstants","DeviceProfileButtons","showCancel","showSave","setCancelShow","handleCancelClose","handleCancelShow","setSaveShow","handleSaveClose","handleSaveShow","onSaveClick","onCancelClick","onCancelCancelClick","onCancelSaveClick","onConfirmCancelClick","onConfirmSaveClick","backdrop","DeviceProfileForm","onHardwareTypeChange","prevState","onNameChange","onCategoryChange","onStatusChange","aria-describedby","DeviceProfile","onCancelClicked","onSaveClicked","renderForm","DeviceCard","showProfile","setShow","handleClose","handleShow","onProfileCancelClicked","onProfileSaveClicked","onEditProfileClicked","horizontalBarChartData","IsBarChartDataEmpty","toPath","menuSvg","renderStatusBarChart","computeAuditedPendingErrorData","DeviceListPage","i","DeviceDataPage","match","params","filter","fetchDeviceDataByDeviceId","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","routes","path","exact","component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.92b2cf04.chunk.js","sourcesContent":["import React from \"react\";\nimport '../css/dashboard.css';\nimport homeSvg from '../image/home.svg'\nimport deviceListSvg from '../image/deviceList.svg'\nimport mapSvg from '../image/map.svg'\nimport itm from '../image/ITM.svg';\nimport photoSvg from '../image/photo.svg'\nimport { Link } from 'react-router-dom'\n\n\nexport default class SideBar extends React.Component {\n    render() {\n        return (\n            <ul className=\"navbar-nav sidebar bg-white accordion\">\n                <Link to='/' className=\"sidebar-brand d-flex align-items-center bg-itm justify-content-center\">\n                    <div className=\"sidebar-brand-text mx-3\"><img alt=\"main\" width=\"100\" src={itm} /></div>\n                </Link>\n                <li className=\"nav-item active\">\n                    <Link to='/' className='nav-link'>\n                        <img alt=\"main\" width=\"20\" src={homeSvg} className=\"mr-1\" />\n                        <span>Home</span>\n                    </Link>\n                </li>\n                <li className=\"nav-item active\">\n                    <Link to='/deviceList' className='nav-link'>\n                        <img alt=\"deviceList\" width=\"20\" className=\"mr-1\" src={deviceListSvg} />\n                        <span>Device List</span>\n                    </Link>\n                </li>\n\n                <li className=\"nav-item active\">\n                    <Link to=\"/location\" onClick={() => window.location.href = '/location'} className=\"nav-link\" >\n                        <img alt=\"location\" width=\"20\" className=\"mr-1\" src={mapSvg} />\n                        <span>Map</span>\n                    </Link>\n                </li>\n\n                <li className=\"nav-item active\">\n                    <Link to=\"/photos\" onClick={() => window.location.href = '/photos'} className=\"nav-link\">\n                        <img alt=\"photos\" width=\"20\" className=\"mr-1\" src={photoSvg} />\n                        <span>Photos</span>\n                    </Link>\n                </li>\n\n            </ul>\n\n        )\n    }\n}","import React from \"react\";\nimport '../css/dashboard.css';\nimport 'bootstrap'\nimport itmSvg from '../image/ITM.svg'\nimport verificationSvg from '../image/verification.svg';\nimport notification from '../image/notification.svg';\n\n\nexport default class NavBar extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-itm topbar mb-4 static-top shadow\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <div className=\"nav-link\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              <img alt=\"verification\" src={verificationSvg}/>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown no-arrow mx-1\">\n            <div className=\"nav-link dropdown-toggle\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              <img alt=\"notification\" src={notification}/>\n            </div>\n            <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"alertsDropdown\">\n              <div className=\"dropdown-item text-center small text-gray-500\">Show All Alerts</div>\n            </div>\n          </li>\n          <div className=\"topbar-divider d-none d-sm-block\"/>\n          <li className=\"nav-item dropdown no-arrow\">\n            <div className=\"nav-link dropdown-toggle\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              <img alt=\"profile\" className=\"img-profile rounded-circle mr-2\" src={itmSvg} />\n              <span className=\" d-none d-lg-inline text-gray-600 small\">ITM Crop.</span>\n            </div>\n\n          </li>\n        </ul>\n      </nav>\n\n    )\n\n  }\n}\n\n","import React from \"react\";\nimport '../../css/dashboard.css';\nimport ethereumSvg from '../../image/ethereum.svg'\nimport remoteControlSvg from '../../image/remoteControl.svg'\nimport clearanceOrderSvg from '../../image/clearanceOrder.svg'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDollarSign } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst icon = {\n    'device': {\n        'btnClass': 'btn btn-primary btn-circle btn-lg',\n        'icon': <img width=\"30\" src={remoteControlSvg} alt=\"device\" />\n    },\n    'txCount': {\n        'btnClass': 'btn btn-purple btn-circle btn-lg',\n        'icon': <i className=\"fa-x text-white\"> <FontAwesomeIcon icon={faDollarSign} /></i>\n    },\n    'ethereum': {\n        'btnClass': 'btn btn-success btn-circle btn-lg',\n        'icon': <img width=\"15\" src={ethereumSvg} alt=\"ethereum\" />\n    },\n    'clearanceOrder': {\n        'btnClass': 'btn btn-danger btn-circle btn-lg',\n        'icon': <img width=\"30\" src={clearanceOrderSvg} alt=\"clearanceOrder\" />\n    }\n}\n\n\nconst etherumStatus = {\n    'ETHEREUM_NORMAL': {\n        'content': 'Normal',\n        'description': <small className='text-success'>Ethereum is in Good Status</small>\n    },\n    'ETHEREUM_CONGESTION': {\n        'content': 'Pending',\n        'description': <small className='text-warn'>Ethereum is in Pending Status</small>\n    },\n    'ETHEREUM_BLOCK': {\n        'content': 'Error',\n        'description': <small className='text-danger'>Ethereum is in Error Status</small>\n    },\n    'ETHEREUM_ERROR': {\n        'content': 'Error',\n        'description': <small className='text-danger'>Ethereum is in Error Status</small>\n    }\n}\n\nfunction clearanceOrderStatus(content) {\n    if (content < 0 || content === undefined) {\n        return ({\n            'content': '',\n            'description': <small className='text-danger'>Clearance Status Error</small>\n        })\n    } else {\n        return ({\n            'content': content,\n            'description': <small className='text-success'>Clearance Status Normal</small>\n        })\n    }\n}\n\nfunction translateContent(type, content) {\n    if (type === 'ethereum') {\n        if (content !== undefined) {\n            return etherumStatus[content];\n        } else {\n            return ({\n                'content': '',\n                'description': <small className='text-danger'>Ethereum is in Error Status</small>\n            })\n        }\n    } else if (type === 'clearanceOrder') {\n        return clearanceOrderStatus(content);\n    } else if (type === 'device') {\n        if (content !== undefined) {\n            return ({\n                'content': content,\n                'description': <small className='text-success'>100% Online</small>\n            })\n        } else {\n            return ({\n                'content': '',\n                'description': <small className='text-danger'>0% Online</small>\n            })\n        }\n    } else if (type === 'txCount') {\n        if (content !== undefined) {\n            return ({\n                'content': content,\n                'description': <small className='text-danger'>30% Used<div><p className='text-secondary'>Since last purchased</p></div></small>\n            })\n        } else {\n            return ({\n                'content':'',\n                'description': <small className='text-danger'>0% Used</small>\n            })\n        }\n    } else {\n        return ({\n            'content': '',\n            'description': ''\n        })\n    }\n}\n\nexport default class StatusCard extends React.Component {\n    render() {\n        const type = this.props.type\n        \n        const content = translateContent(type, this.props.content)\n       \n        return (\n            <div className=\"card shadow h-100 py-2\">\n                <div className=\"card-body\">\n                    <div className=\"row no-gutters align-items-center\">\n                        <div className=\"col mr-2\">\n                            <div className=\"text-xs font-weight-bold text-secondary text-uppercase mb-1\">{this.props.title}</div>\n                            <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{content.content}</div>\n                        </div>\n                        <div className=\"col-auto\">\n                            <div className={icon[type].btnClass} role=\"button\">\n                                {icon[type].icon}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='mt-3'>\n                        {content.description}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","function paddingZero(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number;\n}\n\nexport const isArrayEmpty = (array) => {\n    return array.length > 0;\n}\n\nexport function timeStamp2String(unixTime) {\n    let datetime = new Date();\n    datetime.setTime(unixTime);\n    let year = datetime.getFullYear();\n    let month = paddingZero(datetime.getMonth() + 1);\n    let date = paddingZero(datetime.getDate());\n    let hour = paddingZero(datetime.getHours());\n    let minute = paddingZero(datetime.getMinutes());\n    let second = paddingZero(datetime.getSeconds());\n    return year + \"-\" + month + \"-\" + date + \" \" + hour + \":\" + minute + \":\" + second\n};\n\nexport function timeStamp2Hour(time) {\n    let datetime = new Date();\n    datetime.setTime(time);\n    let hour = paddingZero(datetime.getHours());\n    return hour + \":00\" \n}\n","import React from \"react\";\nimport Chart from 'chart.js' \nimport { timeStamp2Hour } from \"../util\"\n\n//TODO\nlet options = {\n    tooltips: {\n        displayColors: true,\n        mode:'label'\n    },\n    scales: {\n        xAxes: [{\n            stacked: true,\n            gridLines: {\n                display: false,\n            }\n        }],\n        yAxes: [{\n            stacked: true,\n            ticks: {\n                beginAtZero: true,\n                min: 0,\n            },\n            type: 'linear',\n        }]\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: { position: 'bottom' },\n};\n\nexport default class BarChart extends React.Component {\n    constructor(props) {\n        super(props)\n        this.canvasRef = React.createRef();\n    }\n    componentDidUpdate() {\n        const chartDeviceStatus = this.props.dataSource\n        // console.log(\"BarChart componentDidUpdate chartDeviceStatus\", chartDeviceStatus)\n        this.chartData = {\n            labels: [],\n            auditedData: [],\n            pendingData: [],\n            errorData: []\n        }\n\n        chartDeviceStatus.forEach((data) => {\n            this.chartData.labels.push(timeStamp2Hour(data.toTimestamp))\n            const statusCounts = data.statusCounts;\n            let auditedData = statusCounts.CLIENT_AUDIT;\n            let pendingData = statusCounts.REPLY_MSG_RECEIVE + statusCounts.REPLY_MSG_RECEIVE_TX_COUNT_WARN;\n            let errorData = statusCounts.LEDGER_INPUT_ERROR\n                + statusCounts.CLIENT_AUDIT_ERROR\n                + statusCounts.OBJECTION_SUCCESS\n                + statusCounts.OBJECTION_ERROR\n                + statusCounts.TX_COUNT_EXCEED;\n            this.chartData.auditedData.push(auditedData)\n            this.chartData.pendingData.push(pendingData)\n            this.chartData.errorData.push(errorData)\n        });\n\n        // console.log(\"BarChart componentDidUpdate chartData\", this.chartData)\n\n        this.myChart.data.labels = this.chartData.labels\n        this.myChart.data.datasets[0].data = this.chartData.auditedData\n        this.myChart.data.datasets[1].data = this.chartData.errorData\n        this.myChart.data.datasets[2].data = this.chartData.pendingData\n        this.myChart.update();\n    }\n    componentDidMount() {\n        this.myChart = new Chart(this.canvasRef.current, {\n            type: 'bar',\n            data: {\n                labels: [],\n                datasets: [{\n                    label: 'Audited',\n                    backgroundColor: \"#77C95F\",\n                    data: [],\n                }, {\n                    label: 'Error',\n                    backgroundColor: \"#FF5757\",\n                    data: [],\n                }, {\n                    label: 'Not yet audited',\n                    backgroundColor: \"#939290\",\n                    data: [],\n                }],\n            }, options: options\n        });\n    }\n    render() {\n        return (\n            <canvas ref={this.canvasRef} />\n        )\n    }\n}","import axios from 'axios'\nimport './hostNameEnv'\n\n\nexport default axios.create({\n    // baseURL: \"https://\" + hostname.host + \":\" + hostname.port,\n    baseURL: (process.env.NODE_ENV !== 'production') ? 'https://chief-postgres.itm.monster:8443' : ''\n    // baseURL:\"https://chief-postgres.itm.monster:8443\"\n})","import * as actionTypes from './actionTypes'\nimport axios from \"./dashboard_https\";\nimport moment from \"moment\";\nimport * as columnNames from \"../component/DeviceDataTable/ColumnNames\"\nimport * as operators from \"../component/DeviceDataTable/QueryOperators\"\n\n\nexport const fetchDashboardStatus = () => {\n    return async (dispatch) => {\n        const response = await axios.get('/status');\n        dispatch({\n            type: actionTypes.FETCH_DASHBOARD_STATUS,\n            status: response.data\n        })\n    };\n}\n\nexport const fetchAllDeviceListPage = () => {\n    return async (dispatch) => {\n        const response = await axios.get('/device/profiles')\n\n        dispatch({\n            type: actionTypes.FETCH_All_DEVICE_LIST,\n            deviceList: response.data\n        })\n    };\n}\n\nexport const fetchAllDeviceData = (page, pageSize = 10) => {\n    return async (dispatch) => {\n        const response = await axios.post('/device/data/homeDataPage', {page: page, pageSize: pageSize});\n        // console.log(\"fetchAllDeviceData\", response);\n        dispatch({\n            type: actionTypes.FETCH_ALL_DEVICE_DATA,\n            deviceData: response.data\n        })\n    };\n};\n\nexport const fetchDeviceDataByDeviceId = (deviceId, page = 0, pageSize = 10, fromTimestamp, toTimestamp) => {\n    if (!deviceId) {\n        return null;\n    }\n    const timestamp = Math.round((new Date()).getTime());\n    fromTimestamp = fromTimestamp || timestamp - 43200000;\n    toTimestamp = toTimestamp || timestamp;\n    const postData = {\n        deviceId: deviceId,\n        page: page,\n        pageSize: pageSize,\n        fromTimestamp: fromTimestamp,\n        toTimestamp: toTimestamp\n    };\n    return async (dispatch) => {\n        const response = await axios.post('/device/data/deviceDataPage', postData)\n        dispatch({\n            type: actionTypes.FETCH_ALL_DEVICE_DATA,\n            deviceData: response.data\n        })\n    };\n}\n\nexport const fetchAllChartDeviceStatus = (deviceId, duration = 3600000, fromTimestamp, toTimestamp) => {\n    if (!deviceId) {\n        return null;\n    }\n    const timestamp = Math.round((new Date()).getTime());\n    fromTimestamp = fromTimestamp || timestamp - 43200000;\n    toTimestamp = toTimestamp || timestamp;\n    duration = duration || duration;\n    const postData = {\n        deviceId: deviceId,\n        duration: duration,\n        fromTimestamp: fromTimestamp,\n        toTimestamp: toTimestamp\n    };\n    return async (dispatch) => {\n        const response = await axios.post('/chart/deviceStatus', postData)\n        dispatch({\n            type: actionTypes.FETCH_ALL_CHART_DEVICE_STATUS,\n            deviceStatus: response.data\n        })\n    };\n};\n\nexport const fetchDeviceChart = (deviceId) => {\n    return async dispatch => {\n        const response = await axios.get('/chart');\n        dispatch({\n            type: actionTypes.FETCH_ALL_CHART_DEVICE_STATUS,\n            deviceStatus: response.data\n        })\n    }\n}\n\n\nexport const UpdateProfile = (device) => {\n    // console.log(\"Update Profile device\", device);\n    device = {...device, updateTime: moment().valueOf()}\n    let updatedDevice = {\n        category: device.category,\n        deviceId: device.id,\n        deviceName: device.name,\n        hardwareType: device.hardwareType,\n        status: device.status\n    }\n\n    // console.log(\"Update Profile updatedDevice\", updatedDevice);\n    return async dispatch => {\n        await axios.post('/device/profile/edit', updatedDevice);\n        dispatch({\n            type: actionTypes.UPDATE_PROFILE,\n            payload: device\n        })\n    }\n}\n\nexport const GetDeviceData = (tableOptions) => {\n    // const timestamp = Math.round((new Date()).getTime());\n    let filterOptions = {\n        \"filterOptions\": [\n\n        ],\n        \"page\": tableOptions.page || 0,\n        \"pageSize\": tableOptions.pageSize || 10\n    }\n    if (tableOptions.fromTimestamp && tableOptions.toTimestamp) {\n\n        const fromTimestamp = tableOptions.fromTimestamp.valueOf();\n        const toTimestamp = tableOptions.toTimestamp.valueOf();\n        filterOptions.filterOptions.push({\n                \"columnName\": columnNames.TIMESTAMP,\n                \"operator\": operators.BETWEEN,\n                \"value1\": fromTimestamp.toString(),\n                \"value2\": toTimestamp.toString()\n            })\n    }\n\n    if (tableOptions.deviceId) {\n        filterOptions.filterOptions.push({\n            \"columnName\": columnNames.DEVICEID,\n            \"operator\": operators.EQUAL,\n            \"value1\": tableOptions.deviceId,\n            \"value2\": null\n        })\n    }\n    // console.log(\"moment\", moment().valueOf())\n    console.log(\"filterOptions\", filterOptions)\n    console.log(\"filterOptions String\", JSON.stringify(filterOptions))\n\n    // let options = (tableOptions.deviceId) ? queryOptions : queryOptions_alldata;\n    // let url = (tableOptions.deviceId) ? '/device/data/deviceDataPage' : '/device/data/homeDataPage';\n    let url = '/device/data/deviceDataPage';\n    // console.log(\"GetDeviceData\", options);\n    return async dispatch => {\n        const response = await axios.post(url, filterOptions);\n        console.log(\"GetDeviceData Response\", response);\n        dispatch({\n            type: actionTypes.FETCH_DEVICE_TABLE_DATA,\n            payload: {...response.data, currentPage: tableOptions.page}\n        })\n    }\n}","export const FETCH_ALL_DEVICE_DATA = 'FETCH_ALL_DEVICE_DATA';\nexport const FETCH_DASHBOARD_STATUS = 'FETCH_DASHBOARD_STATUS'\nexport const FETCH_All_DEVICE_LIST = 'FETCH_All_DEVICE_LIST'\nexport const FETCH_ALL_CHART_DEVICE_STATUS = \"FETCH_ALL_CHART_DEVICE_STATUS\";\nexport const FETCH_PAGE_COUNT = 'FETCH_PAGE_COUNT';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const FETCH_DEVICE_TABLE_DATA = 'FETCH_DEVICE_TABLE_DATA'\n","export const CLEARANCEORDER = \"clearanceOrder\";\nexport const INDEXVALUE = \"indexValue\"\nexport const STATUS = \"status\"\nexport const DEVICEID = \"deviceId\"\nexport const TIMESTAMP = \"timestamp\"\nexport const CMD = \"cmd\"\n","export const GREATER = \"GREATER\"\nexport const LESS = \"LESS\"\nexport const EQUAL= \"EQUAL\"\nexport const BETWEEN = \"BETWEEN\"\n","import React from \"react\";\nimport Chart from 'chart.js' \n\n\nconst options = {\n  tooltips: {\n    enabled: true,\n    displayColors: true,\n    mode: 'nearest',\n    intersect: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n};\n\n\n\nexport default class PieChart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef();\n  }\n  componentDidUpdate() {\n    this.myChart.data.datasets[0].data = this.props.pieChartData\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'pie',\n      data: {\n        labels: ['SolarPanel', 'Tracker', 'IMAGE_INPUT', 'Other'],\n        datasets: [{\n          //預設資料\n          data: this.props.pieChartData,\n          backgroundColor: [\n            //資料顏色\n            \"#5B9FE1\",\n            \"#BC8AE2\",\n            \"#77C95F\",\n            \"#FF5757\"\n          ],\n        }],\n      },\n      options: options,\n    });\n  }\n\n\n  render() {\n    return (\n      <canvas ref={this.canvasRef} />\n    )\n  }\n}","import React, {Component} from 'react';\nimport Datetime from 'react-datetime';\nimport '../../css/react-datetime.css';\nimport moment from \"moment\";\nimport {Alert, Dropdown, DropdownButton, Modal} from \"react-bootstrap\";\n\nclass DeviceDataTableHeader extends Component {\n    state = {\n        fromTimestamp: this.props.options.fromTimestamp,// || moment(moment().valueOf() - 43200000),\n        toTimestamp: this.props.options.toTimestamp,// || moment(),\n        deviceId: this.props.options.deviceId,\n        pageSize: this.props.options.pageSize,\n        errorShow: false\n    }\n    onStartDateTimeChange = (value) => {\n        let options = {...this.state, fromTimestamp: value}\n        this.setState({fromTimestamp: value})\n        this.props.onChange(options);\n\n        console.log(\"value\", value);\n    }\n    onEndDateTimeChange = (value) => {\n        let options = {...this.state, toTimestamp: value}\n        this.setState({toTimestamp: value});\n        this.props.onChange(options);\n\n    }\n\n    onSearchClick = () => {\n        const timediff = this.state.toTimestamp - this.state.fromTimestamp;\n        if (timediff < 0) {\n            // alert(\"Start time can not be after end time\");\n            console.log(\"here\")\n            this.showError()\n\n        }\n        console.log(\"there\")\n        this.props.onSearchClick(this.state);\n    }\n    closeError = () => this.setErrorShow(false);\n    showError = () => this.setErrorShow(true);\n    setErrorShow = (show) => {\n        this.setState({errorShow: show})\n    }\n    onPageSizeSelect = (eventKey, event) => {\n        console.log(eventKey);\n        console.log(event);\n        this.setState({pageSize: eventKey})\n        this.props.onPageSizeChange(eventKey);\n    }\n\n    renderModalAlert() {\n        return (\n            <Modal\n                show={this.state.errorShow}\n                onHide={this.closeError}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        <div className=\"\">Error</div>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>The following errors occurred:</h4>\n                    <ul>\n                        <li>Start time can not be after end time</li>\n                    </ul>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"btn btn-error\" onClick={this.closeError}>Close</button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    renderAlert() {\n        return (\n            <div>\n                <Alert variant=\"danger\" show={this.state.errorShow} onClose={this.closeError} dismissible>\n                    <Alert.Heading>Oh snap! You got the following error!</Alert.Heading>\n                    <ul>\n                        <li>Start time can not be after end time</li>\n                    </ul>\n                </Alert>\n            </div>\n        )\n    }\n\n    renderPageSelect() {\n        return (\n            <DropdownButton id=\"dropdown-basic-button\" size=\"m\" variant=\"light\" title={this.state.pageSize}>\n                {[10,20,50,100].map((pageSize)=>{\n                    return this.renderPageSelectItem(pageSize)\n                })}\n            </DropdownButton>\n        );\n    }\n\n    renderPageSelectItem(value) {\n        if (this.state.pageSize === value) {\n            return <Dropdown.Item key={value} eventKey={value} active>{value}</Dropdown.Item>\n        }\n        return <Dropdown.Item key={value} eventKey={value} onSelect={this.onPageSizeSelect}>{value}</Dropdown.Item>\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    Start time\n                                </div>\n                                <div className=\"col-4\">\n                                    End time\n                                </div>\n                                <div className=\"col-4\">\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <Datetime closeOnSelect={true} onChange={this.onStartDateTimeChange}\n                                              value={this.state.fromTimestamp}/>\n                                </div>\n                                <div className=\"col-4\">\n                                    <Datetime closeOnSelect={true} onChange={this.onEndDateTimeChange}\n                                              value={this.state.toTimestamp}/>\n                                </div>\n                                <div className=\"col-4\">\n                                    <button className=\"btn btn-primary\" onClick={this.onSearchClick}>Search</button>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"col-6\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n\n                                </div>\n                                <div className=\"col-4\">\n                                </div>\n                                <div className=\"col-4\">\n                                    Items Per Page\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\"></div>\n                                <div className=\"col-4\"></div>\n                                <div className=\"col-4\">\n                                    {this.renderPageSelect()}\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"container-fluid error-alert\">\n                        {this.renderAlert()}\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n\n\n}\n\nexport default DeviceDataTableHeader;","const pendingStatus = {\n    statusCode: \"Pending\",\n    statusClass: \"btn btn-pending btn-circle btn-sm\",\n    btnEthereumClass: \"hidden\"\n}\nconst errorStatus = {\n    statusCode: \"Error\",\n    statusClass: \"btn btn-error btn-circle btn-sm\",\n    btnEthereumClass: \"hidden\"\n}\n\nconst auditedStatus = {\n    statusCode: \"Audited\",\n    statusClass: \"btn btn-audit btn-circle btn-sm\",\n}\n\n\nconst unknownStatus = {\n    statusCode: \"Unknown\",\n    statusClass: \"btn btn-pending btn-circle btn-sm\",\n    btnEthereumClass: \"hidden\"\n\n}\n\n\nexport const REPLY_MSG_RECEIVE = {...pendingStatus, description: \"REPLY_MSG_RECEIVE\"}\nexport const LEDGER_INPUT_OK = {...pendingStatus, description: \"LEDGER_INPUT_OK\"}\nexport const LEDGERINPUT_SUCCESS = {...pendingStatus, description: \"LEDGERINPUT_SUCCESS\"}\nexport const OBJECTION_SUCCESS = {...pendingStatus, description: \"OBJECTION_SUCCESS\"}\nexport const CLIENT_AUDIT = {...auditedStatus, description: \"CLIENT_AUDIT\" }\nexport const VERIFY_OK = {...auditedStatus, description: \"VERIFY_OK\"}\nexport const CLIENT_AUDITED = {...auditedStatus, description: \"CLIENT_AUDITED\"}\nexport const CLIENT_AUDIT_ERROR = {...errorStatus, description: \"CLIENT_AUDIT_ERROR\"}\nexport const LEDGER_INPUT_ERROR = {...errorStatus, description: \"LEDGER_INPUT_ERROR\"}\nexport const OBJECTION_ERROR = {...errorStatus, description: \"OBJECTION_ERROR\"}\nexport const MERKLE_PROOF_ERROR = {...errorStatus, description: \"MERKLE_PROOF_ERROR\"}\n\n\n","import React, {Component} from 'react';\nimport '../../css/dashboard.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faDownload, faInfo} from \"@fortawesome/free-solid-svg-icons\";\nimport ethereum from \"../../image/ethereum.svg\";\nimport {timeStamp2String} from \"../util\";\nimport {OverlayTrigger, Tooltip} from \"react-bootstrap\";\nimport * as deviceDataStatus from './DeviceDataStatus'\n\n\nclass DeviceDataTableBody extends Component {\n    renderHeader() {\n        return (\n            <tr>\n                <th scope=\"col\" className='w-25'>Device ID</th>\n                <th scope=\"col\">Time</th>\n                <th scope=\"col\">CMD</th>\n                <th scope=\"col\">CO</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">On-Chain Proof</th>\n                <th scope=\"col\">Off-Chain Proof</th>\n            </tr>\n        )\n    }\n\n    renderRows() {\n        if (!this.props.data) {\n            return null;\n        }\n\n\n        return this.props.data.map((device) => {\n            // console.log(device)\n            return (\n                <tr key={device.id}>\n                    <td className='text-left'>{device.deviceId}</td>\n                    <td>{timeStamp2String(device.timestamp)}</td>\n                    <td>\n                        {this.rendercmd(device)}\n                    </td>\n                    <td><span>{device.clearanceOrder}</span></td>\n                    <td>\n                        {this.renderStatus(device)}\n                    </td>\n                    <td>\n                        {this.renderOnChainProof(device)}\n                    </td>\n                    <td>\n                        {this.renderOffChainProof(device)}\n                    </td>\n                </tr>\n            )\n\n        })\n    }\n\n    renderStatus(device) {\n        const statusObj = deviceDataStatus[device.status];\n        const statusCode = statusObj.statusCode;// this.translateStatus(device.status);\n\n        if(statusCode!==\"Error\"){\n           return <div className={statusObj.statusClass}> </div>\n        }\n        return (\n            <OverlayTrigger key={device.id} placement={'right'} overlay={\n                <Tooltip id={`tooltip-${'right'}`}>\n                    {statusObj.description}\n                </Tooltip>\n            }>\n                <div className={statusObj.statusClass}> </div>\n            </OverlayTrigger>\n        )\n        // return <div className={this.colorMapping[(this.translateStatus(device.status))].statusClass}> </div>;\n    }\n\n    renderOffChainProof(device) {\n        const statusObj = deviceDataStatus[device.status];\n        return (\n            <span className={statusObj.btnEthereumClass}>\n                <a\n                    className=\"btn btn-dark btn-circle\"\n                    href={`/verificationProof/${device.clearanceOrder}/${device.indexValue}`}\n                    role=\"button\"><FontAwesomeIcon\n                    icon={faDownload}/>\n                </a>\n            </span>\n        );\n    }\n\n    renderOnChainProof(device) {\n        // const status = this.translateStatus(device.status)\n        // console.log(status);\n        const statusObj = deviceDataStatus[device.status];\n        return (\n            <span className={statusObj.btnEthereumClass}>\n                <a className=\"btn btn-dark btn-circle\" href={`/etherscan/${device.clearanceOrder}`} role=\"button\">\n                    <img alt=\"eth\" width=\"15\" src={ethereum}/>\n                </a>\n            </span>\n        );\n    }\n\n    rendercmd(device) {\n\n        return (\n            <OverlayTrigger key={device.id} placement={'right'} overlay={\n                <Tooltip id={`tooltip-${'right'}`}>\n                    {device.cmd}\n                </Tooltip>\n            }>\n                <button className=\"btn btn-dark btn-circle\">\n                    <FontAwesomeIcon icon={faInfo}/>\n                </button>\n            </OverlayTrigger>\n        )\n\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-hover text-center table-striped table-light\">\n                    <thead>\n                    {this.renderHeader()}\n                    </thead>\n                    <tbody>\n                    {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default DeviceDataTableBody;","import React, {Component} from 'react';\n\nclass DeviceDataTableFooter extends Component {\n\n    onPagingClicked = (e) => {\n        this.props.onPagingClicked(parseInt(e.target.value) - 1)\n    }\n\n    renderPagingButtons(key, text, value, enabled) {\n        let btn_className = `btn ${(parseInt(this.props.currentPage) + 1 === parseInt(value)) ? \"btn-primary\" : \"btn-outline-primary\"} rounded-circle`\n        return (\n            <li className=\"page-item ml-2\" key={key}>\n                <button className={btn_className} aria-label=\"Previous\"\n                        onClick={this.onPagingClicked} disabled={!enabled} value={value}>\n                    {text}\n                </button>\n            </li>\n        )\n    }\n\n    renderPageFooters() {\n        console.log(\"DeviceDataTableFooter renderPageFooters\", this.props)\n        if (this.props.currentPage === undefined || this.props.totalPage === 0) {\n            return null;\n        }\n        let pageNum = parseInt(this.props.currentPage) + 1;\n        let pages = Math.min(this.props.totalPage,this.props.displayPageCount)// ? parseInt(this.props.displayPageCount);\n        let totalPages = parseInt(this.props.totalPage);\n        let bufferPages = Math.floor(pages / 2);\n        let fromPage = 1;\n        // Fist batch paging icons\n        if (pageNum > bufferPages + 1) {\n            fromPage = pageNum - bufferPages;\n        }\n\n        // Last batch paging icons\n        if (totalPages - pageNum < bufferPages) {\n            fromPage = totalPages - pages + 1;\n        }\n\n\n        let toPage = fromPage + pages;\n        let pagingRenderer = [];\n        pagingRenderer.push(this.renderPagingButtons(\"first\", \"<<\", 1, (pageNum > 1)))\n        pagingRenderer.push(this.renderPagingButtons(\"prev\", \"<\", pageNum - 1, (pageNum > 1)))\n        for (let number = fromPage; number < toPage; number++) {\n            pagingRenderer.push(this.renderPagingButtons(number, number, number, true))\n        }\n        pagingRenderer.push(this.renderPagingButtons(\"next\", \">\", pageNum + 1, (pageNum < totalPages)));\n        pagingRenderer.push(this.renderPagingButtons(\"last\", \">>\", totalPages, (pageNum < totalPages)));\n        return pagingRenderer;\n    }\n\n\n    render() {\n        return (\n            <div className=\"row justify-content-center\">\n                <div className=\"col-3\">\n                    <nav aria-label=\"Page navigation\">\n                        <ul className=\"pagination\">\n\n                            {this.renderPageFooters()}\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DeviceDataTableFooter;","import React from \"react\";\nimport DeviceDataTableHeader from \"./DeviceDataTableHeader\";\nimport DeviceDataTableBody from \"./DeviceDataTableBody\";\nimport DeviceDataTableFooter from \"./DeviceDataTableFooter\";\nimport '../../css/DeviceDataTable.css'\nimport moment from \"moment\";\n\nclass DeviceDataTable extends React.Component {\n    state = {\n        tableOptions: {\n            deviceId: this.props.deviceId,\n            fromTimestamp: null,//moment(moment().valueOf() - 43200000),\n            page: 0,\n            pageSize: 10,\n            toTimestamp: null //moment().valueOf()\n        },\n        pageSize: 10,\n        currentPage: 0,\n        startClearanceOrder: 0,\n        endClearanceOrder: 0,\n        deviceIds: []\n    }\n    onHeaderChange = (options) => {\n        this.setState({...this.state.tableOptions, ...options})\n    }\n\n    onSearchClick = (options) => {\n        let tableOptions = {...this.state.tableOptions, ...options, page: 0}\n        this.setState({tableOptions})\n        this.props.onSearchClick(tableOptions);\n    }\n\n    onPagingClicked = (page) => {\n        let tableOptions = {...this.state.tableOptions, page}\n        this.setState({tableOptions});\n        this.props.onPagingClick(tableOptions);\n\n    }\n\n    onPageSizeChange = (pageSize) => {\n        let tableOptions = {...this.state.tableOptions, pageSize, page: 0}\n        this.setState({tableOptions});\n        this.props.onPageSizeChange(tableOptions);\n    }\n\n\n    renderFooter() {\n        if (!this.props.displayFooter) {\n            return null;\n        }\n        console.log(\"DeviceDataTable renderFooter props\", this.props)\n        let currentPage = this.props.currentPage;\n        let totalPageCount = this.props.totalPageCount;\n        let displayPageCount = this.props.displayPageCount;\n        return <DeviceDataTableFooter currentPage={currentPage}\n                                      totalPage={totalPageCount}\n                                      displayPageCount={displayPageCount}\n                                      onPagingClicked={this.onPagingClicked}/>\n\n    }\n\n    renderHeader() {\n        if (!this.props.displayFilter) {\n            return null;\n        }\n        return <DeviceDataTableHeader options={this.state.tableOptions} onChange={this.onHeaderChange}\n                                      onSearchClick={this.onSearchClick} onPageSizeChange={this.onPageSizeChange}/>\n    }\n\n    deviceNames() {\n        if (this.props.deviceDataList) {\n            this.props.deviceDataList.map((device) => {\n                return device.deviceId;\n            })\n        }\n        return [];\n    }\n\n    render() {\n        return (\n            <div className=\"deviceDataTable\">\n                <div className=\"deviceDataTableHeader\">\n                    {this.renderHeader()}\n                </div>\n                <div className=\"deviceDataTableBody\">\n                    <DeviceDataTableBody data={this.props.deviceDataList}/>\n                </div>\n                <div className=\"deviceDataTableFooter\">\n                    {this.renderFooter()}\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default DeviceDataTable;","import React from \"react\";\nimport 'jquery';\nimport '../../css/dashboard.css';\nimport StatusCard from \"../card/statusCard\";\nimport BarChart from \"../chart/barChart\";\nimport {\n    fetchAllChartDeviceStatus,\n    fetchAllDeviceData,\n    fetchAllDeviceListPage,\n    fetchDashboardStatus,\n    GetDeviceData\n} from \"../../actions/axios\"\nimport {connect} from 'react-redux';\nimport PieChart from \"../chart/pieChart\"\nimport DeviceDataTable from \"../DeviceDataTable/DeviceDataTable\";\nimport {Dropdown, DropdownButton} from \"react-bootstrap\";\n\nconst computeDeviceCategory = (device) => {\n    let categoryData = [0, 0, 0, 0];\n    device.forEach(data => {\n        const category = data.device.category\n        if (category === \"SOLAR_PANEL_METER\") {\n            categoryData[0] += 1\n        } else if (category === \"TRACKER\") {\n            categoryData[1] += 1\n        } else if (category === \"IMAGE_INPUT\") {\n            categoryData[2] += 1\n        } else {\n            categoryData[3] += 1\n        }\n    })\n    categoryData = [(categoryData[0] / device.length) * 100, (categoryData[1] / device.length) * 100, (categoryData[2] / device.length) * 100, (categoryData[3] / device.length) * 100]\n    return categoryData;\n}\n\nclass IndexPage extends React.Component {\n    constructor(props) {\n        super(props)\n        // this.handlePage = this.handlePage.bind(this)\n        this.state = {\n            dataTableOption: {\n                currentPage: 0,\n                pageCount: 0,\n                pageSize: 10\n            },\n            barChartOption: {\n                fromTimestamp: null,\n                toTimestamp: null,\n                duration: 3600000,\n            }\n        };\n    }\n\n    onSearchClick = (tableOptions) => {\n        this.props.GetDeviceData(tableOptions)\n    }\n    onPagingClick = (tableOptions) => {\n        // console.log(\"In IndexPage onPagingClick\", tableOptions)\n        this.props.GetDeviceData(tableOptions)\n    }\n    onPageSizeChange = (tableOptions) => {\n        this.props.GetDeviceData(tableOptions)\n    }\n\n    renderStatusRow() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <StatusCard type=\"device\" title=\"Total Device Number\" content={this.props.status.deviceCount}/>\n                </div>\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <StatusCard type=\"txCount\" title=\"Tx Count Left\" content={this.props.status.txCount}/>\n                </div>\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <StatusCard type=\"ethereum\" title=\"Ethereum Status\" content={this.props.status.ethereumStatus}/>\n                </div>\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <StatusCard type=\"clearanceOrder\" title=\"Clearance Order\"\n                                content={this.props.status.clearanceOrder}/>\n                </div>\n            </div>\n        );\n    }\n\n    renderChartCard() {\n        // console.log(\"indexPage renderChartCard this.props.chartDeviceStatus\", this.props.chartDeviceStatus)\n        return (\n            <div>\n                <div className=\"card shadow mb-4\">\n                    <div className=\"card-body\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-6 col-sm-6 col-md-6\">\n                                    <h4 className=\"m-0 text-black\">Data Summary</h4>\n                                </div>\n                                <div className=\"col-lg-6 col-sm-6 col-md-6 \">\n                                    <div className=\"dropdown text-right\">\n                                        <DropdownButton id=\"dropdown-basic-button\" size=\"m\" variant=\"outline-secondary\"\n                                                        title={\"Last 12 hours\"}>\n                                            <Dropdown.Item key={0} eventKey={0} active>Last 12 hours</Dropdown.Item>\n                                        </DropdownButton>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"chart-index-bar mt-3\">\n                            <BarChart dataSource={this.props.chartDeviceStatus}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderPieChart() {\n        const pieChartData = computeDeviceCategory(this.props.device)\n        let isPieChartDataAboveZero = false;\n        pieChartData.forEach(data => {\n            isPieChartDataAboveZero = (data >0);\n            if(isPieChartDataAboveZero){\n                return;\n            }\n            // isPieChartDataAboveZero |= (data > 0);\n        })\n        let pieChart;\n        if (isPieChartDataAboveZero) {\n            pieChart = <PieChart pieChartData={pieChartData}/>\n        } else {\n            pieChart = <h1>No Data Display</h1>\n        }\n        return (\n            <div>\n                <div className=\"card shadow mb-4\">\n                    <div className=\"card-body\">\n                        <div className=\"col-12 text-center mb-4\">\n                            <div className=\"row\">\n                                <h4 className=\"m-0 text-black\">Device Data Distribution by Category</h4>\n                            </div>\n                        </div>\n                        <div className=\"chart-area justify-content-center align-items-center\">\n                            {pieChart}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.props.fetchAllChartDeviceStatus('ALL', this.state.barChartOption.duration, this.state.barChartOption.fromTimestamp, this.state.barChartOption.toTimestamp)\n        this.props.fetchAllDeviceData(0, this.state.dataTableOption.pageSize)\n        this.props.fetchDashboardStatus();\n        this.props.fetchAllDeviceListPage();\n        var tableOptions = {\n            deviceId: null,\n            fromTimestamp: null,\n            page: 0,\n            pageSize: 10,\n            toTimestamp: null\n        };\n        this.props.GetDeviceData(tableOptions);\n    }\n\n    render() {\n        // console.log(this.props)\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                    <h1 className=\"mb-0 text-white\">Overview</h1>\n                </div>\n                {this.renderStatusRow()}\n                <div className=\"row\">\n                    <div className=\"col-xl-6 col-lg-6 col-md-6\">\n                        {this.renderChartCard()}\n                    </div>\n                    <div className=\"col-xl-6 col-lg-6 col-md-6\">\n                        {this.renderPieChart()}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xl-12 col-lg-12\">\n                        <h1 className=\"h3 mb-0 text-white\">Data Status</h1>\n\n                        <DeviceDataTable\n                            displayFooter={true}\n                            displayFilter={true}\n                            onPagingClick={this.onPagingClick}\n                            currentPage={this.props.currentPage}\n                            deviceDataList={this.props.deviceDataList}\n                            totalPageCount={this.props.totalPageCount}\n                            displayPageCount={7}\n                            totalCount={this.props.totalCount}\n                            onSearchClick={this.onSearchClick}\n                            onPageSizeChange={this.onPageSizeChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"state\", state)\n    return {\n        device: state.device,\n        status: state.dashboardStatus,\n        chartDeviceStatus: state.chartDeviceStatus,\n        deviceData: state.deviceData,\n        deviceDataList: state.deviceDataTable.deviceDataList,\n        totalCount: state.deviceDataTable.totalDataCount,\n        totalPageCount: state.deviceDataTable.pageCount,\n        currentPage: state.deviceDataTable.currentPage\n    };\n};\nexport default connect(mapStateToProps, {\n    GetDeviceData,\n    fetchAllChartDeviceStatus,\n    fetchAllDeviceData,\n    fetchDashboardStatus,\n    fetchAllDeviceListPage\n})(IndexPage);","import React from \"react\";\nimport Chart from 'chart.js' \n\nconst horizontalBarChartOption= {\n    tooltips: {\n        enabled: false,\n        displayColors: true,\n        mode: 'nearest',\n        intersect: false\n    },\n    scales: {\n        xAxes: [{\n            stacked: true,\n            display: false\n        }],\n        yAxes: [{\n            stacked: true\n        }]\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n};\n\nexport default class HorizontalBarChart extends React.Component {\n\n    canvasRef = React.createRef();\n    componentDidUpdate() {\n        // console.log(this.props)\n        this.myChart.data.datasets[0].data = this.props.auditedData\n        this.myChart.data.datasets[1].data = this.props.errorData\n        this.myChart.data.datasets[2].data = this.props.pendingData\n        this.myChart.update();\n    }\n\n    componentDidMount() {\n        this.myChart = new Chart(this.canvasRef.current, {\n            type: 'horizontalBar',\n            data: {\n                datasets: [{\n                    data: this.props.auditedData,\n                    backgroundColor: \"#77C95F\",\n                    label: 'Audited'\n                }, {\n                    data: this.props.errorData,\n                    backgroundColor: \"#FF5757\",\n                    label: 'Error'\n                }, {\n                    data: this.props.pendingData,\n                    backgroundColor: \"#939290\",\n                    label: 'Not yet audited'\n                }]\n            },\n            options: horizontalBarChartOption,\n        });\n    }\n\n\n    render() {\n        return (\n            <canvas ref={this.canvasRef} />\n        )\n    }\n}","import otherIcon from '../image/cpu-tower.svg'\nimport solarPanelIcon from '../image/solarpanel.svg'\nimport trackerIcon from '../image/gps.svg'\nimport imageIcon from '../image/image.svg'\n\n\nexport const SOLAR_PANEL_METER = \"SOLAR_PANEL_METER\"\nexport const TRACKER=\"TRACKER\"\nexport const IMAGE_INPUT=\"IMAGE_INPUT\"\nexport const OTHER=\"OTHER\"\n\nexport const ICON_SOLAR_PANEL_METER = solarPanelIcon\nexport const ICON_TRACKER= trackerIcon\nexport const ICON_IMAGE_INPUT= imageIcon\nexport const ICON_OTHER= otherIcon","import React from \"react\";\nimport 'jquery';\nimport '../../css/dashboard.css';\nimport * as categoryConstants from '../../common/DeviceCategory';\n\nexport default class DeviceProfileHeader extends React.Component {\n    render() {\n        return (\n            <div className=\"bg-white card container-fluid\">\n                <div className=\"card-body border-dark\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-4 col-lg-4 align-self-center text-center\">\n                            <div className='btn btn-dark btn-xl btn-circle text-light'>\n                                <img src={categoryConstants[`ICON_${this.props.category}`]} width=\"40\" alt={this.props.name} />\n                                <i className=\"flaticon-cpu-tower\"></i>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-8 col-lg-8\">\n                            <h5 className=\"card-title\">\n                                <div className=\"text-left\">{this.props.name}</div>\n                            </h5>\n                            <p className=\"text-dark card-text small text-left\">{this.props.hardwareType}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport DeviceProfileHeader from \"./DeviceProfileHeader\";\n\nclass DeviceProfileButtons extends Component {\n    state = { showCancel: false, showSave: false };\n\n    // Cancel Modal\n    setCancelShow = (show) => {\n        this.setState({ showCancel: show })\n    }\n    handleCancelClose = () => this.setCancelShow(false);\n    handleCancelShow = () => this.setCancelShow(true);\n\n\n    // Save Modal\n    setSaveShow = (show) => {\n        this.setState({ showSave: show })\n    }\n    handleSaveClose = () => this.setSaveShow(false);\n    handleSaveShow = () => this.setSaveShow(true);\n    onSaveClick = () => {\n        this.handleSaveShow();\n    }\n    onCancelClick = () => {\n        this.handleCancelShow();\n    }\n\n\n    onCancelCancelClick = () => {\n        this.handleCancelClose()\n    }\n\n    onCancelSaveClick = () => {\n        this.handleSaveClose()\n    }\n\n    onConfirmCancelClick = () => {\n        this.handleCancelClose();\n        this.props.onCancelClick();\n\n    }\n    onConfirmSaveClick = () => {\n        this.handleSaveClose()\n        this.props.onSaveClick(this.props.device)\n    }\n\n    render() {\n        return (\n            <div className=\"row profile-form-buttons mt-3\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-6 text-center\">\n                            <button type=\"button\" className=\"btn btn-outline-primary mb-n1 btn-block\"\n                                onClick={this.onCancelClick}>Cancel\n                            </button>\n                        </div>\n                        <div className=\"col-6 text-center\">\n                            <button type=\"button\" className=\"btn btn-primary mb-n1 btn-block\" onClick={this.onSaveClick}>Save\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                \n\n                <Modal show={this.state.showCancel} onHide={this.handleCancelClose} backdrop=\"static\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered>\n                    <Modal.Body>\n                        <div>Change not save, are you sure you want to leave?</div>\n                        <DeviceProfileHeader {...this.props.device} />\n                        <div className=\"container-fluid mt-4\">\n                            <div className=\"row\">\n                                <div className=\"col-6 text-center\">\n                                    <button className=\"btn btn-outline-primary btn-block mb-n1\" onClick={this.onCancelCancelClick}>\n                                        Cancel\n                                    </button>\n                                </div>\n                                <div className=\"col-6 text-center\">\n                                    <button className=\"btn btn-primary btn-block mb-n1\" onClick={this.onConfirmCancelClick}>\n                                        Leave\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n\n                <Modal show={this.state.showSave} onHide={this.handleSaveClose} backdrop=\"static\"\n                    aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Body>\n                        <div>Are you sure you want to make the change?</div>\n                        <DeviceProfileHeader {...this.props.device} />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-6 text-center\">\n                                    <button className=\"btn btn-outline-primary btn-block mb-n1\" onClick={this.onCancelSaveClick}>\n                                        Cancel\n                                    </button>\n                                </div>\n                                <div className=\"col-6 text-center\">\n                                    <button className=\"btn btn-primary btn-block mb-n1\" onClick={this.onConfirmSaveClick}>\n                                        Save Changes\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default DeviceProfileButtons;\n","import React, { Component } from 'react';\nimport DeviceProfileButtons from \"./DeviceProfileButtons\";\nimport * as categoryConstants from '../../common/DeviceCategory';\n\nclass DeviceProfileForm extends Component {\n    state = { device: { ...this.props.device } }\n    onHardwareTypeChange = (event) => {\n        console.log(\"onHardwareTypeChange\")\n        const hardwareType = event.target.value;\n        this.setState(prevState => ({\n            device: {\n                ...prevState.device,\n                hardwareType\n            }\n        }))\n    }\n    onNameChange = (event) => {\n        console.log(\"onNameChange\")\n        const name = event.target.value;\n        this.setState(prevState => ({\n            device: {\n                ...prevState.device,\n                name\n            }\n        }))\n        // this.device.name = event.target.value;\n    }\n\n    onCategoryChange = (event) => {\n        const category = event.target.value;\n        this.setState(prevState => ({\n            device: {\n                ...prevState.device,\n                category\n            }\n        }))\n    }\n    onCancelClick = () => {\n        this.props.onCancelClick();\n    }\n\n    onSaveClick = (device) => {\n        this.props.onSaveClick(device)\n    }\n\n    onStatusChange = (event)=>{\n       const status = event.target.value;\n        this.setState(prevState => ({\n            device: {\n                ...prevState.device,\n                status\n            }\n        }))\n    }\n\n    render() {\n        const { device } = this.state;\n        return (\n            <div className=\"mt-3\">\n                <h4 className=\"text-white text-left\">Edit Profile</h4>\n                <div className=\"input-group input-group-lg mb-3 mt-3\">\n                    <div className=\"input-group-prepend profile-form-input-title\">\n                        <span\n                            className=\"input-group-text container-fluid align-self-center text-center\">Device Name</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" value={device.name || \"\"}\n                        onChange={this.onNameChange} />\n                </div>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <div className=\"input-group-prepend profile-form-input-title\">\n                        <span className=\"input-group-text container-fluid\">Category</span>\n                    </div>\n                    <select value={device.category || \"\"} className=\"form-control\" onChange={this.onCategoryChange}>\n                        <option value=\"\"></option>\n                        <option value={categoryConstants.SOLAR_PANEL_METER}>Solar Panel Meter</option>\n                        <option value={categoryConstants.TRACKER} >Tracker</option>\n                        <option value={categoryConstants.IMAGE_INPUT}>Image</option>\n                        <option value={categoryConstants.OTHER}>Other</option>\n                    </select>\n                    {/*<input type=\"text\" className=\"form-control\" aria-describedby=\"basic-addon3\"/>*/}\n                </div>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <div className=\"input-group-prepend profile-form-input-title\">\n                        <span className=\"input-group-text container-fluid\">Hardware Type</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" aria-describedby=\"basic-addon3\"\n                        value={device.hardwareType || \"\"} onChange={this.onHardwareTypeChange} />\n                </div>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <div className=\"input-group-prepend profile-form-input-title\">\n                        <span className=\"input-group-text container-fluid\">Status</span>\n                    </div>\n                    <select value={device.status || \"\"} className=\"form-control\" onChange={this.onStatusChange}>\n                        <option value=\"\"></option>\n                        <option value=\"ONLINE\">ON-LINE</option>\n                        <option value=\"OFFLINE\">OFF-LINE</option>\n                    </select>\n                </div>\n                <DeviceProfileButtons device={device} onCancelClick={this.onCancelClick} onSaveClick={this.onSaveClick}/>\n            </div>\n\n        )\n    }\n}\n\nexport default DeviceProfileForm\n","import React, {Component} from 'react';\nimport DeviceProfileHeader from \"./DeviceProfileHeader\";\nimport DeviceProfileForm from \"./DeviceProfileForm\";\n\nclass DeviceProfile extends Component {\n    onCancelClick = () => {\n        this.props.onCancelClicked();\n    }\n\n    onSaveClick = (device) => {\n        // console.log(\"in profile\", device)\n        this.props.onSaveClicked(device);\n    }\n\n    renderForm() {\n        return <DeviceProfileForm device={this.props.device} onCancelClick={this.onCancelClick}\n                                  onSaveClick={this.onSaveClick}/>\n    }\n\n    render() {\n        // console.log(\"props in render\", this.props.device);\n        const device = this.props.device;\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"profile-form\">\n                    <div className=\"row profile-form-title\">\n                        <h4 className=\"modal-title text-left text-white mb-3\" id=\"exampleModalCenterTitle\">\n                            Device Profile\n                        </h4>\n                        <DeviceProfileHeader {...this.props.device} />\n                    </div>\n                    <div>\n                        {this.renderForm()}\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DeviceProfile;\n","import React from \"react\";\nimport '../../css/dashboard.css';\nimport HorizontalBarChart from \"../chart/horizontalBarChart\"\nimport * as categoryConstants from '../../common/DeviceCategory';\nimport menuSvg from '../../image/menu.svg'\nimport {Link} from 'react-router-dom'\nimport {timeStamp2String} from '../util'\nimport DeviceProfile from \"../DeviceProfile/DeviceProfile\"\nimport Modal from \"react-bootstrap/Modal\";\n\nclass DeviceCard extends React.Component {\n    state = {showProfile: false};\n\n    setShow = (show) => {\n        this.setState({showProfile: show})\n    }\n    handleClose = () => this.setShow(false);\n    handleShow = () => this.setShow(true);\n\n    onProfileCancelClicked = () => {\n        // this.props.onProfileCancelClicked();\n        this.handleClose();\n    }\n\n    onProfileSaveClicked = (device) => {\n        // console.log(\"in profile\", device)\n        this.props.onProfileSaveClicked(device);\n        this.handleClose();\n    }\n    onEditProfileClicked = () => {\n        this.handleShow();\n    }\n\n    renderStatusBarChart() {\n        // console.log(\"barchart data\", this.props.horizontalBarChartData);\n        if(!this.props.horizontalBarChartData){\n            // console.log(\"not loading yet\")\n            return null\n        }\n        function IsBarChartDataEmpty({auditedData, errorData, pendingData}) {\n            return (auditedData[0] === 0 && pendingData[0] === 0 && errorData[0] === 0)\n        }\n\n        if (IsBarChartDataEmpty(this.props.horizontalBarChartData)) {\n            return (\n                <div className=\"card-title p-3\">\n                    <h6>Status (Last 12 Hours)</h6>\n                    <div className=\"chart-horizontalBar\">\n                        No data available\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"card-title p-3\">\n                <h6>Status (Last 12 Hours)</h6>\n                <div className=\"chart-horizontalBar\">\n                    <HorizontalBarChart {...this.props.horizontalBarChartData} />\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const updateTime = timeStamp2String(this.props.device.updateTime)\n        const toPath = `/deviceData/${this.props.device.id}`\n        // console.log(\"DeviceCard render\", this.props.device);\n        return (\n            <div className=\"bg-white card\">\n                <div className=\"card-body border-bottom border-dark\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-4 col-lg-4 align-self-center text-center\">\n                            <Link to={toPath} className='btn btn-dark btn-xl btn-circle text-light'>\n                                <img alt=\"\" src={categoryConstants[`ICON_${this.props.device.category}`]} width=\"40\" className=\"categoryIcon\"/>\n                            </Link>\n                        </div>\n                        <div className=\"col-xl-8 col-lg-8\">\n                            <div className=\"col-12 col-lg-12\">\n                                <div className=\"row\">\n                                    <div className=\"col-xl-9 col-lg-9 mt-2\">\n                                        <h5 className=\"card-title text-left\">\n                                            <Link to={toPath}>{this.props.device.name}</Link>\n                                        </h5>\n                                    </div>\n                                    <div className=\"col-xl-3 col-lg-3 text-right\">\n                                        <button className=\"btn\" type=\"button\" id=\"dropdownMenuButton\"\n                                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            <img src={menuSvg} width=\"20\" alt=\"\"/>\n                                        </button>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                            <button type=\"button\" className=\"btn btn-white\"\n                                                    onClick={this.onEditProfileClicked}>\n                                                Edit Profile\n                                            </button>\n                                        </div>\n                                        <Modal show={this.state.showProfile} onHide={this.handleClose}\n                                               backdrop=\"static\"\n                                               aria-labelledby=\"contained-modal-title-vcenter\"\n                                               centered>\n                                            <Modal.Body className=\"bg-itm\">\n                                                <DeviceProfile device={this.props.device}\n                                                               onCancelClicked={this.onProfileCancelClicked}\n                                                               onSaveClicked={this.onProfileSaveClicked}/>\n                                            </Modal.Body>\n                                        </Modal>\n                                    </div>\n                                </div>\n                                <p className=\"text-dark card-text small\">{this.props.device.hardwareType}</p>\n                                <p><small>Last Update Time</small></p>\n                                <p><small>{updateTime}</small></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {this.renderStatusBarChart()}\n            </div>\n\n        )\n    }\n\n\n}\n\nexport default DeviceCard;\n","\nexport const computeAuditedPendingErrorData = (statusCounts) => {\n    if (statusCounts != null) {\n        let auditedData = statusCounts.CLIENT_AUDIT;\n        let pendingData = statusCounts.REPLY_MSG_RECEIVE + statusCounts.REPLY_MSG_RECEIVE_TX_COUNT_WARN;\n        let errorData = statusCounts.LEDGER_INPUT_ERROR\n            + statusCounts.CLIENT_AUDIT_ERROR\n            + statusCounts.OBJECTION_SUCCESS\n            + statusCounts.OBJECTION_ERROR\n            + statusCounts.TX_COUNT_EXCEED;\n        return ({\n            auditedData: [auditedData],\n            pendingData: [pendingData],\n            errorData: [errorData]\n        })\n    }else{\n        return({\n            auditedData: [0],\n            pendingData: [0],\n            errorData: [0]\n        })\n    }\n}","import React from \"react\";\nimport 'jquery';\nimport '../../css/dashboard.css';\nimport DeviceCard from '../card/deviceCard'\nimport { connect } from 'react-redux';\nimport { computeAuditedPendingErrorData } from '../chartData'\nimport { Link } from 'react-router-dom'\nimport {fetchAllDeviceListPage, UpdateProfile} from \"../../actions/axios\";\n\nclass DeviceListPage extends React.Component {\n    onProfileSaveClicked = (device)=>{\n        this.props.UpdateProfile(device)\n        // console.log(\"In Device List Page on ProfileSaveClicked\", device);\n    }\n    componentDidMount() {\n        this.props.fetchAllDeviceListPage();\n    }\n\n    render() {\n        // console.log(\"DeviceListPage render\", this.props.deviceList)\n        const deviceList = this.props.deviceList;\n        console.log(\"deviceListPage render\", this.props.deviceList)\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"d-sm-flex align-items-center mb-4\">\n                    <Link to='/' className=\"text-white\">\n                        <p className=\"h2 text-white mr-1\">Home </p>\n                    </Link>\n                    <p className=\"h2 text-white ml-1\">> Device List </p>\n                </div>\n\n                <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                    <h2 className=\"mb-0 text-white\">Device List</h2>\n                </div>\n                <div className=\"row\">\n                    {deviceList.map((data, i) => {\n                        const horizontalBarChartData = computeAuditedPendingErrorData(data.statusCounts)\n                        return <div className=\"col-xl-4 col-lg-4  mt-3\" key={i}>\n                            <DeviceCard key={data.device.id} device={data.device} horizontalBarChartData={horizontalBarChartData} onProfileSaveClicked={this.onProfileSaveClicked} />\n                        </div>\n                    })}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        deviceList: state.device,\n    };\n};\n\n\nexport default connect(mapStateToProps, {UpdateProfile, fetchAllDeviceListPage})(DeviceListPage);","import React from \"react\";\nimport DeviceCard from '../card/deviceCard'\nimport BarChart from '../chart/barChart';\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport {fetchAllChartDeviceStatus, fetchAllDeviceListPage, GetDeviceData, UpdateProfile} from \"../../actions/axios\"\nimport {computeAuditedPendingErrorData} from '../chartData'\nimport {fetchDeviceDataByDeviceId} from '../../actions/axios'\nimport DeviceDataTable from \"../DeviceDataTable/DeviceDataTable\";\n\nclass DeviceDataPage extends React.Component {\n    state = {\n        barChartOption: {\n            fromTimestamp: null,\n            toTimestamp: null,\n            duration: 3600000\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchAllChartDeviceStatus(this.props.match.params.deviceId, this.state.barChartOption.duration, this.state.barChartOption.fromTimestamp, this.state.barChartOption.toTimestamp)\n        // this.props.fetchDeviceDataByDeviceId(this.props.match.params.deviceId, 0, this.state.pageSize, this.state.fromTimestamp, this.state.toTimestamp)\n        this.props.fetchAllDeviceListPage();\n        var tableOptions = {\n            deviceId: this.props.match.params.deviceId,\n            fromTimestamp: 0,\n            page: 0,\n            pageSize: 10,\n            toTimestamp: 0\n        }\n        this.props.GetDeviceData(tableOptions);\n    }\n\n    onPagingClick = (tableOptions) => {\n        this.props.GetDeviceData(tableOptions)\n    }\n    onSearchClick = (tableOptions) => {\n        this.props.GetDeviceData(tableOptions)\n    }\n    onProfileSaveClicked = (device)=>{\n        this.props.UpdateProfile(device)\n    }\n    onPageSizeChange = (tableOptions) => {\n        this.props.GetDeviceData(tableOptions)\n    }\n\n    render() {\n        const deviceList = this.props.deviceList;\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"d-sm-flex align-items-center mb-4\">\n                    <Link to='/' className=\"text-white\">\n                        <p className=\"h2 text-white mr-1\">Home </p>\n                    </Link>\n                    <p className=\"h2 text-white ml-1\">></p>\n                    <Link to='/deviceList' className=\"text-white\">\n                        <p className=\"h2 text-white ml-1\"> Device List </p>\n                    </Link>\n                    <p className=\"h2 text-white ml-1\">></p>\n\n                    <p className=\"h2 text-white ml-1\">{this.props.match.params.deviceId}</p>\n                </div>\n\n                <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                    <h3 className=\"mb-0 text-white\">Device Data</h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xl-4 col-lg-4 mb-3\">\n                        {\n                            deviceList.filter((data) => {\n                                return data.device.id === this.props.match.params.deviceId\n                            }).map((data) => {\n                                const horizontalBarChartData = computeAuditedPendingErrorData(data.statusCounts)\n                                return <DeviceCard key={data.device.id} device={data.device}\n                                                   horizontalBarChartData={horizontalBarChartData} onProfileSaveClicked={this.onProfileSaveClicked}/>\n                            })\n                        }\n                    </div>\n                    <div className=\"col-xl-8 col-lg-8 mb-3\">\n                        <div className=\"card shadow mb-4\">\n                            <div className=\"card-body\">\n                                <h5 className=\"m-0 text-black\">Device Data Summary</h5>\n                                <div className=\"chart-bar mt-4\">\n                                    <BarChart dataSource={this.props.chartDeviceStatus}/>\n                                </div>\n                            </div>\n                            <div className=\"mt-3\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className=\"col-xl-12 col-lg-12 mt-3\">\n                        <DeviceDataTable\n                            deviceId={this.props.match.params.deviceId}\n                            displayFooter={true}\n                            displayFilter={true}\n                            onPagingClick={this.onPagingClick}\n                            currentPage={this.props.currentPage}\n                            deviceDataList={this.props.deviceDataList}\n                            totalPageCount={this.props.totalPageCount}\n                            displayPageCount={7}\n                            totalCount={this.props.totalCount}\n                            onSearchClick={this.onSearchClick}\n                            onPageSizeChange = {this.onPageSizeChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n\n    console.log(\"deviceDataPage deviceList\", state.device);\n    return {\n        deviceList: state.device,\n        chartDeviceStatus: state.chartDeviceStatus,\n        page: state.page,\n        deviceData: state.deviceData,\n        deviceDataList: state.deviceDataTable.deviceDataList,\n        totalCount: state.deviceDataTable.totalDataCount,\n        totalPageCount: state.deviceDataTable.pageCount,\n        currentPage: state.deviceDataTable.currentPage\n    };\n};\n\nexport default connect(mapStateToProps, {\n    GetDeviceData,\n    fetchAllChartDeviceStatus,\n    fetchDeviceDataByDeviceId,\n    UpdateProfile,\n    fetchAllDeviceListPage\n})(DeviceDataPage);","import {FETCH_DEVICE_TABLE_DATA} from \"../actions/actionTypes\";\n\nexport default (deviceDataTable = {}, action) => {\n    switch (action.type) {\n        case FETCH_DEVICE_TABLE_DATA:\n            console.log(\"Fetch_Device_Table_Data\", action.payload)\n            // const deviceDataList = action.payload.deviceDataResponses.map((data) => {\n            //     return data.deviceData;\n            // })\n            // const result = {\n            //     deviceDataList,\n            //     pageCount: action.payload.pageCount,\n            //     totalDataCount: action.payload.totalDataCount,\n            //     currentPage: action.payload.currentPage\n            // }\n            return action.payload;\n        default:\n            // console.log(\"DeviceDataListReducer default action\", action)\n            // console.log(\"DeviceDataListReducer default state\", deviceDataTable)\n            return deviceDataTable;\n    }\n}","import { combineReducers } from 'redux'\nimport status from './dashboardStatusReducer'\nimport chartDeviceStatus from './chartDeviceStatusReducer'\nimport device from './deviceListPageReducer'\nimport deviceData from './deviceDataReducer'\nimport DeviceDataListReducer from \"./DeviceDataListReducer\";\n\n\nexport default combineReducers({\n    dashboardStatus:status,\n    chartDeviceStatus:chartDeviceStatus,\n    device:device,\n    deviceData:deviceData,\n    deviceDataTable: DeviceDataListReducer\n});\n","import { FETCH_DASHBOARD_STATUS } from '../actions/actionTypes';\n\nexport default function dashboardStatusReducer(state = [], action) {\n  switch (action.type) {\n    case FETCH_DASHBOARD_STATUS:\n      const dashboardStatus = action.status;\n      return dashboardStatus;\n    default:\n      return state;\n  }\n}\n","import { FETCH_ALL_CHART_DEVICE_STATUS } from '../actions/actionTypes';\n\nexport default function chartDeviceStatusReducer(state = [], action) {\n \n  switch (action.type) {\n    case FETCH_ALL_CHART_DEVICE_STATUS:\n      return action.deviceStatus;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nexport default function deviceListPageReducer(state = [], action) {\n    switch (action.type) {\n        case actionTypes.FETCH_All_DEVICE_LIST:\n            console.log(\"deviceListPageReducer\", action.deviceList)\n            return action.deviceList;\n        case actionTypes.UPDATE_PROFILE:\n            console.log(\"deviceList\", state)\n            return state.map((device) => {\n                if (device.device.id !== action.payload.id) {\n                    return device;\n                }\n                return {\n                    ...device,\n                    device: {...action.payload}\n                }\n            })\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nexport default function deviceDataReducer(state = [], action) {\n    switch (action.type) {\n        case actionTypes.FETCH_ALL_DEVICE_DATA:\n            return action.deviceData;\n\n        default:\n            return state;\n    }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducer/reducer'\n// import { fetchDashboardStatus,fetchAllDeviceListPage} from '../actions/axios'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n\n// store.dispatch(fetchDashboardStatus());\n// store.dispatch(fetchAllDeviceListPage())\n\nexport default store;\n\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport SideBar from './sideBar'\nimport NavBar from './navBar'\nimport IndexPage from './page/indexPage'\nimport DeviceListPage from './page/deviceListPage'\nimport DeviceDataPage from './page/deviceDataPage'\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nconst routes = (\n    <Provider store={store}>\n        <Router>\n            <div id=\"wrapper\">\n                <SideBar/>\n                <div className=\"d-flex flex-column\" id=\"content-wrapper\">\n                    <div className=\"bg-itm\" id=\"content\">\n                        <NavBar/>\n                        <Route path='/' exact component={IndexPage}/>\n                        <Route path='/deviceList' exact component={DeviceListPage}/>\n                        <Route path='/deviceData/:deviceId' component={DeviceDataPage}/>\n                    </div>\n                </div>\n            </div>\n        </Router>\n    </Provider>\n\n)\n\nexport default routes;\n\n","import ReactDOM from \"react-dom\";\nimport routes from './component/route'\n\nReactDOM.render(\n  routes\n  ,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/ITM.776c2dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/ethereum.90159390.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.ea40dbf1.svg\";","module.exports = __webpack_public_path__ + \"static/media/deviceList.65684a0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.5fb9c0ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/photo.bc9a3195.svg\";","module.exports = __webpack_public_path__ + \"static/media/verification.a7190984.svg\";","module.exports = __webpack_public_path__ + \"static/media/notification.9c68896b.svg\";","module.exports = __webpack_public_path__ + \"static/media/remoteControl.2ef5ade6.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearanceOrder.33988fdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/cpu-tower.7d86dd4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/solarpanel.d6b0c8b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/gps.33ed814a.svg\";","module.exports = __webpack_public_path__ + \"static/media/image.aa271fa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.34f3f57e.svg\";"],"sourceRoot":""}